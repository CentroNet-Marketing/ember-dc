{"name":"Ember-DC","tagline":"Ember DC  - Multi-Dimensional charting with crossfilter and d3.js (dc.js)","body":"# Ember DC (dc.js)\r\n\r\n## Introduction\r\n\r\nEmber DC - Multi-Dimensional charting built to work natively with crossfilter rendered with d3.js (dc.js)\r\n\r\nEmber Component Wrappers for [dc.js](http://nickqizhu.github.io/dc.js/)\r\n\r\n![demo](http://cl.ly/image/3d2T1A0a2420/Screen%20Shot%202014-02-15%20at%204.36.31%20AM.png)\r\n\r\n## Features\r\n\r\n- Responsive Charts\r\n- Multiple Line Chart\r\n- Bar Chart\r\n- Bubble Chart\r\n- Coordinate Grid Chart\r\n- Data Table\r\n- Heat Map\r\n- Number Display\r\n- Pie Chart\r\n- Row Chart\r\n- Scatter Plot\r\n- Stackable Chart\r\n- Geo Choropleth Chart (Map)\r\n\r\nIf you want more features than this provides, file an issue. Feature requests/contributions are welcome.\r\n\r\n## Example usage\r\n\r\nController\r\n\r\n```javascript\r\n\r\n/**\r\n * @property metrics\r\n * @type {Array}\r\n * Computed Metrics\r\n */\r\nmetrics: [\r\n  {value:'sighting',       label: 'Sightings'}\r\n],\r\n\r\nstartDate: moment().subtract('years', 50),\r\nendDate: moment().subtract('years', 4),\r\n\r\n/**\r\n * @method _createDimensions\r\n * Create the defined dimensions from the controller.\r\n * @return {void}\r\n * @private\r\n */\r\n_createDimensions: function() {\r\n  var self = this;\r\n\r\n  var content = Ember.get(this, 'content');\r\n\r\n  content.forEach(function(d, i) {\r\n    d.date = moment(d.sighted, 'YYYYMMDD').toDate();\r\n  });\r\n\r\n  d3.json(\"us-states.json\", function (statesJson) {\r\n    self.set('usStates', statesJson);\r\n  });\r\n\r\n  // Date Dimension\r\n  this.set('dimensions.date', this._crossfilter.dimension(function(d) { return d.date; }));\r\n  this.set('dimensions.state', this._crossfilter.dimension(function (d) { return d.state; }));\r\n  this.set('dimensions.daysOfWeek', this._crossfilter.dimension(function (d) {\r\n    var day = d.date.getDay();\r\n    var name=[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"];\r\n    return day+\".\"+name[day];\r\n  }));\r\n},\r\n\r\n\r\n/**\r\n * @method _createGroups\r\n * Create the defined groups from the controller.\r\n * @return {void}\r\n * @private\r\n */\r\n_createGroups: function() {\r\n  this.set('groups.all', this._crossfilter.groupAll());\r\n  this.set('groups.daysOfWeek', this.get('dimensions.daysOfWeek').group());\r\n  this.set('groups.dateComposite', this.get('dimensions.date').group(d3.time.month).reduce(\r\n    function(p, v){\r\n        return {\r\n          sighting: p.sighting+1\r\n        }\r\n    },\r\n    function(p, v){\r\n      return {\r\n        sighting: p.sighting-1\r\n      }\r\n    },\r\n    function(){return {sighting:0};}\r\n  ));\r\n\r\n  this.set('groups.state', this.get('dimensions.state').group());\r\n}\r\n\r\n```\r\n\r\n\r\nComponents (templates)\r\n\r\n```handlebars\r\n\r\n// Line Chart Example\r\n\r\n{{line-chart\r\n  metrics=metrics\r\n  dimension=dimensions.date\r\n  group=groups.dateComposite\r\n  brushOn=true\r\n}}\r\n\r\n// Pie Chart Example\r\n\r\n{{pie-chart\r\n  dimension=dimensions.state\r\n  group=groups.state\r\n  all=groups.all\r\n}}\r\n\r\n// Geo Choropleth Chart Example (US Map)\r\n\r\n{{geo-choropleth-chart\r\n  dimension=dimensions.state\r\n  group=groups.state\r\n  geoJSON=usStates\r\n}}\r\n\r\n// Row Chart\r\n\r\n{{row-chart\r\n  dimension=dimensions.daysOfWeek\r\n  group=groups.daysOfWeek\r\n}}\r\n\r\n```\r\n\r\n## Building Ember DC\r\nEmber DC uses [node.js](http://nodejs.org/) and [gulp](http://gulpjs.com/) as a build system,\r\nThese two libraries will need to be installed before building.\r\n\r\nTo build Ember DC, clone the repository, and run `npm install` to install build dependencies\r\nand `gulp` to build the library.\r\n\r\nBuilds of Ember DC will be placed in the `dist` directory\r\n\r\n\r\n## Building Example App\r\n\r\nBe sure to build the library first with `gulp`.\r\n\r\nRun `gulp example-app` to build the example app.\r\n\r\nRun `node example-app/server.js` to start the server.\r\n\r\nOpen [http://localhost:3001](http://localhost:3001) in the browser.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}